=========== CUADRUPLOS ===========
0 [Goto, _ , _ , 20]
1 [equal, localVar0, Constante0, localVar1]
2 [equal, localVar0, Constante1, localVar2]
3 [or, localVar1, localVar2, localVar3]
4 [GotoF, localVar3, _ , 8]
5 [return, number, localVar0, returnVar]
6 [ENDPROC, _ , _ , _ ]
7 [Goto, _ , _ , 19]
8 [ERA, _ , _ , 'funcionFibonacci']
9 [-, localVar0, Constante1, localVar4]
10 [param, localVar4, [number, number], 0]
11 [gosub, _ , _ , 1]
12 [ERA, _ , _ , 'funcionFibonacci']
13 [-, localVar0, Constante2, localVar5]
14 [param, localVar5, [number, number], 0]
15 [gosub, _ , _ , 1]
16 [+, returnVar, returnVar, localVar6]
17 [return, number, localVar6, returnVar]
18 [ENDPROC, _ , _ , _ ]
19 [ENDPROC, _ , _ , _ ]
20 [+, Constante0, [number, number], globalVar0]
21 [print, Constante3, _ , _ ]
22 [read, number, _ , globalVar0]
23 [ERA, _ , _ , 'funcionFibonacci']
24 [param, globalVar0, [number, number], 0]
25 [gosub, _ , _ , 1]
26 [print, returnVar, _ , _ ]
=========== MAQUINA VIRTUAL ==================
[Goto, _ , _ , 20]
[+, Constante0, [number, number], globalVar0]
[print, Constante3, _ , _ ]
[read, number, _ , globalVar0]
[ERA, _ , _ , 'funcionFibonacci']
[param, globalVar0, [number, number], 0]
[gosub, _ , _ , 1]
[equal, localVar0, Constante0, localVar1]
[equal, localVar0, Constante1, localVar2]
[or, localVar1, localVar2, localVar3]
[GotoF, localVar3, _ , 8]
[ERA, _ , _ , 'funcionFibonacci']
[-, localVar0, Constante1, localVar4]
[param, localVar4, [number, number], 0]
[gosub, _ , _ , 1]
[equal, localVar0, Constante0, localVar1]
[equal, localVar0, Constante1, localVar2]
[or, localVar1, localVar2, localVar3]
[GotoF, localVar3, _ , 8]
[ERA, _ , _ , 'funcionFibonacci']
[-, localVar0, Constante1, localVar4]
[param, localVar4, [number, number], 0]
[gosub, _ , _ , 1]
[equal, localVar0, Constante0, localVar1]
[equal, localVar0, Constante1, localVar2]
[or, localVar1, localVar2, localVar3]
[GotoF, localVar3, _ , 8]
[ERA, _ , _ , 'funcionFibonacci']
[-, localVar0, Constante1, localVar4]
[param, localVar4, [number, number], 0]
[gosub, _ , _ , 1]
[equal, localVar0, Constante0, localVar1]
[equal, localVar0, Constante1, localVar2]
[or, localVar1, localVar2, localVar3]
[GotoF, localVar3, _ , 8]
[return, number, localVar0, returnVar]
[ENDPROC, _ , _ , _ ]
[ERA, _ , _ , 'funcionFibonacci']
[-, localVar0, Constante2, localVar5]
[param, localVar5, [number, number], 0]
[gosub, _ , _ , 1]
[equal, localVar0, Constante0, localVar1]
[equal, localVar0, Constante1, localVar2]
[or, localVar1, localVar2, localVar3]
[GotoF, localVar3, _ , 8]
[return, number, localVar0, returnVar]
[ENDPROC, _ , _ , _ ]
[+, returnVar, returnVar, localVar6]
[return, number, localVar6, returnVar]
[ENDPROC, _ , _ , _ ]
[ERA, _ , _ , 'funcionFibonacci']
[-, localVar0, Constante2, localVar5]
[param, localVar5, [number, number], 0]
[gosub, _ , _ , 1]
[equal, localVar0, Constante0, localVar1]
[equal, localVar0, Constante1, localVar2]
[or, localVar1, localVar2, localVar3]
[GotoF, localVar3, _ , 8]
[return, number, localVar0, returnVar]
[ENDPROC, _ , _ , _ ]
[+, returnVar, returnVar, localVar6]
[return, number, localVar6, returnVar]
[ENDPROC, _ , _ , _ ]
[ERA, _ , _ , 'funcionFibonacci']
[-, localVar0, Constante2, localVar5]
[param, localVar5, [number, number], 0]
[gosub, _ , _ , 1]
[equal, localVar0, Constante0, localVar1]
[equal, localVar0, Constante1, localVar2]
[or, localVar1, localVar2, localVar3]
[GotoF, localVar3, _ , 8]
[ERA, _ , _ , 'funcionFibonacci']
[-, localVar0, Constante1, localVar4]
[param, localVar4, [number, number], 0]
[gosub, _ , _ , 1]
[equal, localVar0, Constante0, localVar1]
[equal, localVar0, Constante1, localVar2]
[or, localVar1, localVar2, localVar3]
[GotoF, localVar3, _ , 8]
[return, number, localVar0, returnVar]
[ENDPROC, _ , _ , _ ]
[ERA, _ , _ , 'funcionFibonacci']
[-, localVar0, Constante2, localVar5]
[param, localVar5, [number, number], 0]
[gosub, _ , _ , 1]
[equal, localVar0, Constante0, localVar1]
[equal, localVar0, Constante1, localVar2]
[or, localVar1, localVar2, localVar3]
[GotoF, localVar3, _ , 8]
[return, number, localVar0, returnVar]
[ENDPROC, _ , _ , _ ]
[+, returnVar, returnVar, localVar6]
[return, number, localVar6, returnVar]
[ENDPROC, _ , _ , _ ]
[+, returnVar, returnVar, localVar6]
[return, number, localVar6, returnVar]
[ENDPROC, _ , _ , _ ]
[print, returnVar, _ , _ ]